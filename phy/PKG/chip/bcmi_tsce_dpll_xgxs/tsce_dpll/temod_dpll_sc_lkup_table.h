/*
 * This software is governed by the Broadcom Switch APIs license.
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenMDK/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */


#ifndef _temod2pll_sc_lkup_table_DEFINES_H_
#define _temod2pll_sc_lkup_table_DEFINES_H_

typedef struct temod2pll_sc_table_entry_t
{
  int num_lanes;
  int t_pma_os_mode;
  int t_scr_mode;
  int t_encode_mode;
  int cl48_check_end;
  int blk_sync_mode;
  int r_reorder_mode;
  int cl36_en;

  int r_descr1_mode;
  int r_dec1_mode;
  int r_deskew_mode;
  int r_desc2_mode;
  int r_desc2_byte_deletion;
  int r_dec1_brcm64b66_descr;
/*
  Notes:
    1. When the loop_cnt1		== 0, the clk_cnt1 is a don't care
    2. the pcs crd/cnt are valid only when byte replication is valid, say for 10M, 100M cases
*/
  int pll_mode;
  int sgmii;
  int clkcnt0;
  int clkcnt1;
  int lpcnt0;
  int lpcnt1;
  int mac_cgc;
  int pcs_repcnt;
  int pcs_crdten;
  int pcs_clkcnt;
  int pcs_cgc;
  int cl72_en;

} temod2pll_sc_table_entry;

#ifdef _DV_TB_
/* theoretical max is 256. There are around 55 now.  */
static temod2pll_sc_table_entry temod2pll_sc_ht_entry[] = {

/*digital_operationSpeeds_SPEED_10M :                     0*/  { 0, 5, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 1, 0, TEMOD2PLL_PLL_MODE_DIV_40, 1, 2500, 0, 1, 0, 2499, 1, 1, 25, 24 ,0},
/*digital_operationSpeeds_SPEED_10M :                     1*/  { 0, 5, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 1, 0, TEMOD2PLL_PLL_MODE_DIV_40, 1, 2500, 0, 1, 0, 2499, 1, 1, 25, 24,0 },
/*digital_operationSpeeds_SPEED_100M :                    2*/  { 0, 5, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 0, 0, TEMOD2PLL_PLL_MODE_DIV_40, 1, 250, 0, 1, 0, 249, 0, 1, 25, 24 ,0},
/*digital_operationSpeeds_SPEED_1000M :                   3*/  { 0, 5, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_40, 0, 25, 0, 1, 0, 24, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_1G_CX1 :TBD               4*/  { 0, 9, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_80, 0, 165, 0, 1, 0, 41, 0, 0, 0, 0,0 },
/*digital_operationSpeeds_SPEED_1G_KX1 :                  5*/  { 0, 8, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 165, 0, 1, 0, 41, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_2p5G :                    6*/  { 0, 1, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_40, 0, 10, 0, 1, 0, 6, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_5G_X1 :                   7*/  { 0, 0, 2, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_10B, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_40, 0, 5, 0, 1, 0, 3, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_10G_CX4 :                 8*/  { 2, 4, 0, TEMOD2PLL_ENCODE_MODE_CL48, 1, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_80, 0, 5, 0, 1, 0, 3, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_10G_KX4:                  9*/  { 2, 1, 0, TEMOD2PLL_ENCODE_MODE_CL48, 1, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_40, 0, 5, 0, 1, 0, 2, 0, 0, 0, 0 ,0},

/*digital_operationSpeeds_SPEED_10G_X4:              10/0xa*/  { 2, 4, 0, TEMOD2PLL_ENCODE_MODE_CL48, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_80, 0, 5, 0, 1, 0, 3, 0, 0, 0, 0,0 },
/*digital_operationSpeeds_SPEED_13G_X4 :NA           11/0xb*/  { 2, 1, 0, TEMOD2PLL_ENCODE_MODE_CL48, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_52, 0, 5, 0, 1, 0, 2, 0, 0, 0, 0,0 },
/*digital_operationSpeeds_SPEED_15G_X4 :             12/0xc*/  { 2, 1, 0, TEMOD2PLL_ENCODE_MODE_CL48, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_60, 0, 5, 0, 1, 0, 2, 0, 0, 0, 0,0 },
/*digital_operationSpeeds_SPEED_16G_X4 :             13/0xd*/  { 2, 1, 0, TEMOD2PLL_ENCODE_MODE_CL48, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_64, 0, 5, 0, 1, 0, 2, 0, 0, 0, 0,0 },
/*digital_operationSpeeds_SPEED_20G_CX4:             14/0xe*/  { 2, 0, 0, TEMOD2PLL_ENCODE_MODE_CL48, 1, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_40, 0, 5, 0, 1, 0, 1, 0, 0, 0, 0,1 },
/*digital_operationSpeeds_SPEED_10G_CX2 :            15/0xf*/  { 1, 1, 0, TEMOD2PLL_ENCODE_MODE_CL48_2_LANE, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_10B, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_80, 0, 5, 0, 1, 0, 3, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_10G_X2 :            16/0x10*/  { 1, 1, 2, TEMOD2PLL_ENCODE_MODE_CL48_2_LANE, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_10B, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_80, 0, 5, 0, 1, 0, 3, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_20G_X4:             17/0x11*/  { 2, 0, 2, TEMOD2PLL_ENCODE_MODE_CL48, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_10B, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_80, 0, 5, 0, 1, 0, 1, 0, 0, 0, 0 ,0},

/*digital_operationSpeeds_SPEED_10p5G_X2:NA         18/0x12*/  { 1, 0, 2, TEMOD2PLL_ENCODE_MODE_CL48_2_LANE, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_10B, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_42, 0, 5, 0, 1, 0, 2, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_21G_X4:             19/0x13*/  { 2, 0, 2, TEMOD2PLL_ENCODE_MODE_CL48, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_10B,    TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_42, 0, 5, 0, 1, 0, 1, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_12p7G_X2 :NA        20/0x14*/  { 1, 0, 1, TEMOD2PLL_ENCODE_MODE_BRCM, 0, TEMOD2PLL_BLOCKSYNC_MODE_BRCM, 1, 0, TEMOD2PLL_R_DESCR1_MODE_66B, TEMOD2PLL_DECODER_MODE_BRCM, TEMOD2PLL_R_DESKEW_MODE_BRCM_66B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_42, 0, 33, 0, 1, 0, 2, 0, 0, 0, 0,0 },
/*digital_operationSpeeds_SPEED_25p45G_X4:NA        21/0x15*/  { 2, 0, 1, TEMOD2PLL_ENCODE_MODE_BRCM, 0, TEMOD2PLL_BLOCKSYNC_MODE_BRCM, 1, 0, TEMOD2PLL_R_DESCR1_MODE_66B, TEMOD2PLL_DECODER_MODE_BRCM, TEMOD2PLL_R_DESKEW_MODE_BRCM_66B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_42, 0, 33, 0, 1, 0, 1, 0, 0, 0, 0,0 },
/*digital_operationSpeeds_SPEED_15p75G_X2:NA        22/0x16*/  { 1, 0, 1, TEMOD2PLL_ENCODE_MODE_BRCM, 0, TEMOD2PLL_BLOCKSYNC_MODE_BRCM, 1, 0, TEMOD2PLL_R_DESCR1_MODE_66B, TEMOD2PLL_DECODER_MODE_BRCM, TEMOD2PLL_R_DESKEW_MODE_BRCM_66B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_52, 0, 33, 0, 1, 0, 2, 0, 0, 0, 0,0 },
/*digital_operationSpeeds_SPEED_31p5G_X4:NA         23/0x17*/  { 2, 0, 1, TEMOD2PLL_ENCODE_MODE_BRCM, 0, TEMOD2PLL_BLOCKSYNC_MODE_BRCM, 1, 0, TEMOD2PLL_R_DESCR1_MODE_66B, TEMOD2PLL_DECODER_MODE_BRCM, TEMOD2PLL_R_DESKEW_MODE_BRCM_66B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_52, 0, 33, 0, 1, 0, 1, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_31p5G_KR4:NA        24/0x18*/  { 2, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_52, 0, 33, 0, 1, 0, 1, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_20G_CX2:            25/0x19*/  { 1, 0, 1, TEMOD2PLL_ENCODE_MODE_BRCM, 0, TEMOD2PLL_BLOCKSYNC_MODE_BRCM, 1, 0, TEMOD2PLL_R_DESCR1_MODE_66B, TEMOD2PLL_DECODER_MODE_BRCM, TEMOD2PLL_R_DESKEW_MODE_BRCM_66B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 33, 0, 1, 0, 2, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_20G_X2:             26/0x1a*/  { 1, 0, 1, TEMOD2PLL_ENCODE_MODE_BRCM, 0, TEMOD2PLL_BLOCKSYNC_MODE_BRCM, 1, 0, TEMOD2PLL_R_DESCR1_MODE_66B, TEMOD2PLL_DECODER_MODE_BRCM, TEMOD2PLL_R_DESKEW_MODE_BRCM_66B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 33, 0, 1, 0, 2, 0, 0, 0, 0 ,0},



/*digital_operationSpeeds_SPEED_40G_X4:             27/0x1b*/  { 2, 0, 1, TEMOD2PLL_ENCODE_MODE_BRCM, 0, TEMOD2PLL_BLOCKSYNC_MODE_BRCM, 1, 0, TEMOD2PLL_R_DESCR1_MODE_66B, TEMOD2PLL_DECODER_MODE_BRCM, TEMOD2PLL_R_DESKEW_MODE_BRCM_66B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 33, 0, 1, 0, 1, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_10G_KR1:            28/0x1c*/  { 0, 0, 3, TEMOD2PLL_ENCODE_MODE_CL49, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL49,  0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL49, TEMOD2PLL_R_DESKEW_MODE_BYPASS, TEMOD2PLL_DESC2_MODE_CL49, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 33, 0, 1, 0, 4, 0, 0, 0, 0 ,1},
/*digital_operationSpeeds_SPEED_10p6_X1:            29/0x1d*/  { 0, 0, 3, TEMOD2PLL_ENCODE_MODE_CL49, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL49,  0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL49, TEMOD2PLL_R_DESKEW_MODE_BYPASS, TEMOD2PLL_DESC2_MODE_CL49, 2, 0, TEMOD2PLL_PLL_MODE_DIV_70, 0, 33, 0, 1, 0, 4, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_20G_KR2             30/0x1e*/  { 1, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 33, 0, 1, 0, 2, 0, 0, 0, 0 ,1},
/*digital_operationSpeeds_SPEED_20G_CR2             31/0x1f*/  { 1, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 33, 0, 1, 0, 2, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_21G_X2              32/0x20*/  { 1, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_70, 0, 33, 0, 1, 0, 2, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_40G_KR4             33/0x21*/  { 2, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 33, 0, 1, 0, 1, 0, 0, 0, 0 ,1},
/*digital_operationSpeeds_SPEED_40G_CR4             34/0x22*/  { 2, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 33, 0, 1, 0, 1, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_42G_X4              35/0x23*/  { 2, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_70, 0, 33, 0, 1, 0, 1, 0, 0, 0, 0 ,1},
/*digital_operationSpeeds_SPEED_100G_CR10           36/0x24*/  { 3, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 9, 5, 1, 18,   1, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_107G_CR10 TBD       37/0x25*/  { 3, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_70, 0, 9, 5, 1, 18, 1, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_120G_X12 TBD        38/0x26*/  { 4, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 33, 0, 1, 0, 1, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_127G_X12 TBD        39/0x27*/  { 4, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_70, 0, 33, 0, 1, 0, 1, 0, 0, 0, 0 ,0},

/*digital_operationSpeeds_SPEED_12p12G_X1           40/0x28*/  { 0, 0, 3, TEMOD2PLL_ENCODE_MODE_CL49, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL49, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL49, TEMOD2PLL_R_DESKEW_MODE_BYPASS, TEMOD2PLL_DESC2_MODE_CL49, 2, 0, TEMOD2PLL_PLL_MODE_DIV_80, 0, 33, 0, 1, 0, 4, 0, 0, 0, 0 ,1},
/*digital_operationSpeeds_SPEED_24p24G_X2           41/0x29*/  { 1, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_80, 0, 33, 0, 1, 0, 2, 0, 0, 0, 0 ,1},
/*digital_operationSpeeds_SPEED_48p48G_X4           42/0x2a*/  { 2, 0, 3, TEMOD2PLL_ENCODE_MODE_CL82, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL82, 0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL82, TEMOD2PLL_R_DESKEW_MODE_CL82_66B, TEMOD2PLL_DESC2_MODE_CL82, 2, 0, TEMOD2PLL_PLL_MODE_DIV_80, 0, 33, 0, 1, 0, 1, 0, 0, 0, 0 ,1},


/*??? first 3 arg values?? */
/*digital_operationSpeeds_SPEED_21p21G_X2:          43   /0x2b*/  { 1, 0, 1, TEMOD2PLL_ENCODE_MODE_BRCM, 0, TEMOD2PLL_BLOCKSYNC_MODE_BRCM, 1, 0, TEMOD2PLL_R_DESCR1_MODE_66B, TEMOD2PLL_DECODER_MODE_BRCM, TEMOD2PLL_R_DESKEW_MODE_BRCM_66B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_70, 0, 33, 0, 1, 0, 2, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_42p42G_X4:          44   /0x2c*/  { 2, 0, 1, TEMOD2PLL_ENCODE_MODE_BRCM, 0, TEMOD2PLL_BLOCKSYNC_MODE_BRCM, 1, 0, TEMOD2PLL_R_DESCR1_MODE_66B, TEMOD2PLL_DECODER_MODE_BRCM, TEMOD2PLL_R_DESKEW_MODE_BRCM_66B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_70, 0, 33, 0, 1, 0, 1, 0, 0, 0, 0 ,1},


/*digital_operationSpeeds_SPEED_ILLEGAL             45/0x2d*/  { 1, 0, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_40, 0, 2500, 0, 1, 0, 2499, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_ILLEGAL             46/0x2e*/  { 1, 0, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_40, 0, 2500, 0, 1, 0, 2499, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_ILLEGAL             47/0x2f*/  { 1, 0, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_40, 0, 2500, 0, 1, 0, 2499, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_ILLEGAL             48/0x30*/  { 1, 0, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_40, 0, 2500, 0, 1, 0, 2499, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_5G_KR1:             49/0x31*/  { 0, 1, 3, TEMOD2PLL_ENCODE_MODE_CL49, 0, TEMOD2PLL_BLOCKSYNC_MODE_CL49,  0, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL49, TEMOD2PLL_R_DESKEW_MODE_BYPASS, TEMOD2PLL_DESC2_MODE_CL49, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 33, 0, 1, 0, 8, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_10p5G_X4:           50/0x32*/  { 2, 1, 0, TEMOD2PLL_ENCODE_MODE_CL48, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_42, 0, 5, 0, 1, 0, 2, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_ILLEGAL             51/0x33*/  { 1, 0, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_40, 0, 2500, 0, 1, 0, 2499, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_ILLEGAL             52/0x34*/  { 1, 0, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_40, 0, 2500, 0, 1, 0, 2499, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_10M_10p3125:        53/0x35*/  { 0, 8, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 1, 0, TEMOD2PLL_PLL_MODE_DIV_66, 1, 4125, 0, 1, 0, 4124, 1, 1, 165, 41 ,0},
/*digital_operationSpeeds_SPEED_100M_10p3125:       54/0x36*/  { 0, 8, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 0, 0, TEMOD2PLL_PLL_MODE_DIV_66, 1, 825, 0, 1, 0, 412, 0, 1, 165, 41 ,0},
/*digital_operationSpeeds_SPEED_1000M_10p3125:      55/0x37*/  { 0, 8, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 165, 0, 1, 0, 41, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_2p5G_X1_10p3125:    56/0x38*/  { 0, 3, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 33, 0, 1, 0, 16, 0, 0, 0, 0 ,0},

/*digital_operationSpeeds_SPEED_10G_KX4_10p3125:    57/0x39*/  { 2, 3, 0, TEMOD2PLL_ENCODE_MODE_CL48, 1, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 5, 0, 1, 0, 2, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_10G_CX4_10p3125:    58/0x3a*/  { 2, 3, 0, TEMOD2PLL_ENCODE_MODE_CL48, 1, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 5, 0, 1, 0, 2, 0, 0, 0, 0 ,0},
/*digital_operationSpeeds_SPEED_10G_X4_10p3125:     59/0x3b*/  { 2, 3, 0, TEMOD2PLL_ENCODE_MODE_CL48, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 1, 0, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL48, TEMOD2PLL_R_DESKEW_MODE_8B_10B, TEMOD2PLL_DESC2_MODE_CL48, 2, 0, TEMOD2PLL_PLL_MODE_DIV_66, 0, 5, 0, 1, 0, 2, 0, 0, 0, 0,0 },
/*digital_operationSpeeds_SPEED_ILLEGAL             60/0x3c*/  { 1, 0, 0, TEMOD2PLL_ENCODE_MODE_CL36, 0, TEMOD2PLL_BLOCKSYNC_MODE_8B10B, 0, 1, TEMOD2PLL_R_DESCR1_MODE_BYPASS, TEMOD2PLL_DECODER_MODE_CL36, TEMOD2PLL_R_DESKEW_MODE_CL36_10B, TEMOD2PLL_DESC2_MODE_CL36, 2, 0, TEMOD2PLL_PLL_MODE_DIV_40, 0, 2500, 0, 1, 0, 2499, 0, 0, 0, 0 ,0}
};

#endif
#ifdef _DV_TB_
typedef struct temod2pll_sc_pmd_entry_t
{
  int num_lanes;
  int t_pma_os_mode;
  int pll_mode;
  int vco_rate;
  int media_type;  /* 0: PCB traces or Backplane, 1: Copper cable, 2: Optics */
  int brdfe_on;
  int osdfe_on;
  int cl72_emulation_en;
  int scrambling_dis;
  /* add additional entries here */
} temod2pll_sc_pmd_entry_st;

static temod2pll_sc_pmd_entry_st temod2pll_sc_pmd_entry[] = {

/*digital_operationSpeeds_SPEED_10M :                     0*/  { 0, TEMOD2PLL_PMA_OS_MODE_5,  TEMOD2PLL_PLL_MODE_DIV_40},
/*digital_operationSpeeds_SPEED_10M :                     1*/  { 0, TEMOD2PLL_PMA_OS_MODE_5,   2,  3, 0, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_100M :                    2*/  { 0, TEMOD2PLL_PMA_OS_MODE_5,   2,  3, 0, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_1000M :                   3*/  { 0, TEMOD2PLL_PMA_OS_MODE_5,   2,  3, 0, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_1G_CX1 :TBD               4*/  { 0, TEMOD2PLL_PMA_OS_MODE_10, 13, 28, 1, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_1G_KX1 :                  5*/  { 0, 8,                     TEMOD2PLL_PLL_MODE_DIV_66, 3, 0, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_2p5G :                    6*/  { 0, TEMOD2PLL_PMA_OS_MODE_2,   2,  3, 2, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_5G_X1 :                   7*/  { 0, TEMOD2PLL_PMA_OS_MODE_1,   2,  3, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_10G_CX4 :                 8*/  { 4, TEMOD2PLL_PMA_OS_MODE_4,   2,  3, 1, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_10G_KX4:                  9*/  { 4, TEMOD2PLL_PMA_OS_MODE_2,   2,  3, 0, 0, 0, 0, 0 },

/*digital_operationSpeeds_SPEED_10G_X4: TBD          10/0xa*/  { 4, TEMOD2PLL_PMA_OS_MODE_4,  13, 28, 0, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_13G_X4 :NA           11/0xb*/  { 4, 1,  TEMOD2PLL_PLL_MODE_DIV_52, 10, 0, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_15G_X4 :             12/0xc*/  { 4, 1,  TEMOD2PLL_PLL_MODE_DIV_60, 15, 0, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_16G_X4 :             13/0xd*/  { 4, 1,  TEMOD2PLL_PLL_MODE_DIV_64, 18, 0, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_20G_CX4:             14/0xe*/  { 4, 0,  TEMOD2PLL_PLL_MODE_DIV_40,  28, 0, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_10G_CX2 : TBD        15/0xf*/  { 2, TEMOD2PLL_PMA_OS_MODE_2,  13, 28, 1, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_10G_X2 :            16/0x10*/  { 2, TEMOD2PLL_PMA_OS_MODE_2,  13, 28, 0, 0, 0, 0, 1 },
/*digital_operationSpeeds_SPEED_20G_X4:  TBD        17/0x11*/  { 4, TEMOD2PLL_PMA_OS_MODE_1,  2, 3, 0, 0, 0, 0, 1 },

/*digital_operationSpeeds_SPEED_10p5G_X2:NA         18/0x12*/  { 2, 0,  TEMOD2PLL_PLL_MODE_DIV_42, 4, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_21G_X4:             19/0x13*/  { 4, 0,  3, 4, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_12p7G_X2 :NA        20/0x14*/  { 2, 0,  TEMOD2PLL_PLL_MODE_DIV_42, 4, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_25p45G_X4:NA        21/0x15*/  { 4, 0,  TEMOD2PLL_PLL_MODE_DIV_42, 4, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_15p75G_X2:NA        22/0x16*/  { 2, 0,  TEMOD2PLL_PLL_MODE_DIV_52, 10, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_31p5G_X4:NA         23/0x17*/  { 4, 0,  TEMOD2PLL_PLL_MODE_DIV_52, 10, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_31p5G_KR4:NA        24/0x18*/  { 4, 0,  TEMOD2PLL_PLL_MODE_DIV_52, 10, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_20G_CX2:            25/0x19*/  { 2, 0,  TEMOD2PLL_PLL_MODE_DIV_66, 19, 1, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_20G_X2:             26/0x1a*/  { 2, 0,  TEMOD2PLL_PLL_MODE_DIV_66, 19, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_40G_X4:             27/0x1b*/  { 2, 0,  TEMOD2PLL_PLL_MODE_DIV_66, 19, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_10G_KR1:            28/0x1c*/  { 0, 0,  10, 19, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_10p6_X1:            29/0x1d*/  { 0, 0,  TEMOD2PLL_PLL_MODE_DIV_70, 22, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_20G_KR2             30/0x1e*/  { 2, 0,  10, 19, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_20G_CR2             31/0x1f*/  { 2, 0,  10, 19, 1, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_21G_X2 TBD          32/0x20*/  { 2, 0,  TEMOD2PLL_PLL_MODE_DIV_70, 22, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_40G_KR4             33/0x21*/  { 4, 0,  10, 19, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_40G_CR4             34/0x22*/  { 4, 0,  10, 19, 1, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_42G_X4              35/0x23*/  { 4, 0,  12, 22, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_100G_CR10 TBD       36/0x24*/  {10, 0,  10, 19, 1, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_107G_CR10 TBD       37/0x25*/  {10, 0,  12, 22, 1, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_120G_X12 TBD        38/0x26*/  {12, 0,  10, 19, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_127G_X12 TBD        39/0x27*/  {12, 0,  12, 22, 0, 0, 0, 0, 0 },

/*digital_operationSpeeds_SPEED_10G_KR1:            40/0x28*/  { 0, 0,  13, 28, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_20G_KR2             41/0x29*/  { 2, 0,  13, 28, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_40G_KR4             42/0x2a*/  { 4, 0,  13, 28, 0, 0, 0, 0, 0 },

/*digital_operationSpeeds_SPEED_21p21G_X2            43/0x2b*/  { 2, 0, TEMOD2PLL_PLL_MODE_DIV_70, 22, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_42p42G_X4            44/0x2c*/  { 4, 0, TEMOD2PLL_PLL_MODE_DIV_70, 22, 0, 0, 0, 0, 0 },


/*digital_operationSpeeds_SPEED_ILLEGAL             45/0x2d*/  { 0, 5, TEMOD2PLL_PLL_MODE_DIV_40},
/*digital_operationSpeeds_SPEED_ILLEGAL             46/0x2e*/  { 0, 5, TEMOD2PLL_PLL_MODE_DIV_40},
/*digital_operationSpeeds_SPEED_ILLEGAL             47/0x2f*/  { 0, 5, TEMOD2PLL_PLL_MODE_DIV_40},
/*digital_operationSpeeds_SPEED_ILLEGAL             48/0x30*/  { 0, 5, TEMOD2PLL_PLL_MODE_DIV_40},
/*digital_operationSpeeds_SPEED_5G_KR1              49/0x31*/  { 0, 1,  10, 19, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_10p5G_X4            50/0x32*/  { 2, 1,  TEMOD2PLL_PLL_MODE_DIV_42 },
/*digital_operationSpeeds_SPEED_ILLEGAL             51/0x33*/  { 0, 5,  TEMOD2PLL_PLL_MODE_DIV_40},
/*digital_operationSpeeds_SPEED_ILLEGAL             52/0x33*/  { 0, 5,  TEMOD2PLL_PLL_MODE_DIV_40},
/*digital_operationSpeeds_SPEED_10M_10p3125         53/0x35*/  { 0, 8,  TEMOD2PLL_PLL_MODE_DIV_66},
/*digital_operationSpeeds_SPEED_100M_10p3125        54/0x36*/  { 0, 8,  TEMOD2PLL_PLL_MODE_DIV_66},
/*digital_operationSpeeds_SPEED_1000M_10p3125       55/0x37*/  { 0, 8,  TEMOD2PLL_PLL_MODE_DIV_66},
/*digital_operationSpeeds_SPEED_2p5G_X1_10p3125     56/0x38*/  { 0, 3,  TEMOD2PLL_PLL_MODE_DIV_66},
/*digital_operationSpeeds_SPEED_10G_KX4_10p3125:    57/0x39*/  { 4, TEMOD2PLL_PMA_OS_MODE_3_3,  10, 19, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_10G_CX4_10p3125:    58/0x3a*/  { 4, TEMOD2PLL_PMA_OS_MODE_3_3,  10, 19, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_10G_X4_10p3125:     59/0x3b*/  { 4, TEMOD2PLL_PMA_OS_MODE_3_3,  10, 19, 0, 0, 0, 0, 0 },
/*digital_operationSpeeds_SPEED_ILLEGAL             60/0x3c*/  { 0, 5,  TEMOD2PLL_PLL_MODE_DIV_40}

};
#endif

#ifdef _SDK_TEMOD2PLL_
typedef struct eagle2pll_sc_pmd_entry_t
{
  int num_lanes;
  int t_pma_os_mode;
  int pll_mode;
  int osdfe_on;
  int brdfe_on;
  int scrambling_dis;
  /* add additional entries here */
} eagle2pll_sc_pmd_entry_st;
#endif
#endif
